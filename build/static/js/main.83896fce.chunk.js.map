{"version":3,"sources":["styles/global.js","services/api.js","util/format.js","store/modules/cart/actions.js","pages/Home/styles.js","pages/Home/index.js","pages/Cart/styles.js","pages/Cart/index.js","routes.js","components/Header/styles.js","components/Header/index.js","services/history.js","store/modules/rootReducer.js","store/modules/cart/reducer.js","store/modules/cart/sagas.js","store/modules/rootSaga.js","store/index.js","index.js","App.js"],"names":["createGlobalStyle","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","updateAmountRequest","id","amount","type","updateAmountSuccess","ProductList","styled","ul","darken","Home","useState","products","setProducts","useSelector","state","cart","reduce","sumAmount","product","dispatch","useDispatch","useEffect","a","get","response","data","map","priceFormated","price","fetchData","key","src","image","alt","title","onClick","CartActions","size","color","Container","div","ProductTable","table","Total","Cart","subtotal","total","totalSum","decrement","readOnly","value","increment","Routes","path","exact","component","header","Link","Header","cartSize","length","to","history","createBrowserHistory","combineReducers","action","produce","draft","push","productIndex","findIndex","p","splice","Number","addToCart","updateAmount","select","find","productExist","call","stock","stockAmount","currentAmount","toast","error","put","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","sagaMonitor","enhancer","applyMiddleware","store","createStore","rootReducer","run","ReactDOM","render","autoClose","document","getElementById"],"mappings":"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","file":"static/js/main.83896fce.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default createGlobalStyle`\n    @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n\n    * {\n        margin: 0;\n        padding: 0;\n        outline: 0;\n        box-sizing: border-box;\n    }\n\n    body {\n        background: #191920 url('https://skylab.rocketseat.com.br/api/files/1562597196893.svg') no-repeat center top;\n        -webkit-font-smoothing: antialiased;\n    }\n\n    body, input, button {\n        font-family: 'Roboto', sans-serif;\n        font-size: 14px;\n    }\n\n    #root {\n        max-width: 1020px;\n        margin: 0 auto;\n        padding: 0 20px 50px;\n    }\n\n    button {\n        cursor: pointer;\n    }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://localhost:3333',\n});\n\nexport default api;\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL',\n});\n","export function addToCartRequest(id) {\n    return {\n        type: '@cart/ADD_REQUEST',\n        id,\n    };\n}\n\nexport function addToCartSuccess(product) {\n    return {\n        type: '@cart/ADD_SUCCESS',\n        product,\n    };\n}\n\nexport function removeFromCart(id) {\n    return {\n        type: '@cart/REMOVE',\n        id,\n    };\n}\n\nexport function updateAmountRequest(id, amount) {\n    return {\n        type: '@cart/UPDATE_AMOUNT_REQUEST',\n        id,\n        amount,\n    };\n}\n\nexport function updateAmountSuccess(id, amount) {\n    return {\n        type: '@cart/UPDATE_AMOUNT_SUCCESS',\n        id,\n        amount,\n    };\n}\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 20px;\n    list-style: none;\n\n    li {\n        display: flex;\n        flex-direction: column;\n        background: #fff;\n        border-radius: 4px;\n        padding: 20px;\n\n        img {\n            align-self: center;\n            max-width: 250px;\n        }\n\n        > strong {\n            font-size: 16px;\n            line-height: 20px;\n            color: #333;\n            margin-top: 5px;\n        }\n\n        > span {\n            font-size: 21px;\n            font-weight: bold;\n            margin: 5px 0 20px;\n        }\n\n        button {\n            background: #7159c1;\n            color: #fff;\n            border: 0;\n            border-radius: 4px;\n            overflow: hidden;\n            margin-top: auto;\n\n            display: flex;\n            align-items: center;\n            transition: background 0.2s;\n\n            &:hover {\n                background: ${(darken(0.03), '#7159c1')};\n            }\n\n            div {\n                display: flex;\n                align-items: center;\n                padding: 12px;\n                background: rgba(0, 0, 0, 0.1);\n\n                svg {\n                    margin-right: 5px;\n                }\n            }\n\n            span {\n                flex: 1;\n                text-align: center;\n                font-weight: bold;\n            }\n        }\n    }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport api from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport * as CartActions from '../../store/modules/cart/actions';\n\nimport { ProductList } from './styles';\n\nexport default function Home() {\n    const [products, setProducts] = useState([]);\n\n    const amount = useSelector(state =>\n        state.cart.reduce((sumAmount, product) => {\n            sumAmount[product.id] = product.amount;\n\n            return sumAmount;\n        }, {})\n    );\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await api.get('products');\n\n            const data = response.data.map(product => ({\n                ...product,\n                priceFormated: formatPrice(product.price),\n            }));\n\n            setProducts(data);\n        }\n\n        fetchData();\n    }, []);\n\n    function handleAddProduct(id) {\n        dispatch(CartActions.addToCartRequest(id));\n    }\n\n    return (\n        <ProductList>\n            {products.map(product => (\n                <li key={product.id}>\n                    <img src={product.image} alt={product.title} />\n\n                    <strong>{product.title}</strong>\n                    <span>{product.priceFormated}</span>\n\n                    <button\n                        type=\"button\"\n                        onClick={() => handleAddProduct(product.id)}\n                    >\n                        <div>\n                            <MdAddShoppingCart size=\"16\" color=\"#fff\" />{' '}\n                            {amount[product.id] || 0}\n                        </div>\n\n                        <span>ADICIONAR AO CARRINHO</span>\n                    </button>\n                </li>\n            ))}\n        </ProductList>\n    );\n}\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n    padding: 30px;\n    background: #fff;\n    border-radius: 4px;\n\n    footer {\n        margin-top: 30px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        button {\n            background: #7159c1;\n            color: #fff;\n            border: 0;\n            border-radius: 4px;\n            padding: 12px 20px;\n            font-weight: bold;\n            text-transform: uppercase;\n            transition: background 0.2s;\n\n            &:hover {\n                background: ${darken(0.03, '#7159c1')};\n            }\n        }\n    }\n`;\n\nexport const ProductTable = styled.table`\n    width: 100%;\n\n    thead th {\n        color: #999;\n        text-align: left;\n        padding: 12px;\n    }\n\n    tbody td {\n        padding: 22px;\n        vertical-align: middle;\n        border-bottom: 1px solid #eee;\n    }\n\n    img {\n        height: 100px;\n    }\n\n    strong {\n        color: #333;\n        display: block;\n    }\n\n    span {\n        display: block;\n        margin-top: 5px;\n        font-size: 18px;\n        font-size: 10px;\n        font-weight: bold;\n    }\n\n    div {\n        display: flex;\n        align-items: center;\n\n        input {\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            color: #666;\n            padding: 6px;\n            width: 50px;\n            cursor: default;\n        }\n    }\n\n    button {\n        background: none;\n        border: 0;\n        padding: 6px;\n    }\n`;\n\nexport const Total = styled.div`\n    display: flex;\n    align-items: baseline;\n\n    span {\n        color: #999;\n        font-weight: bold;\n    }\n\n    strong {\n        font-size: 28px;\n        margin-left: 5px;\n    }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    MdRemoveCircleOutline,\n    MdAddCircleOutline,\n    MdDelete,\n} from 'react-icons/md';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { formatPrice } from '../../util/format';\n\nimport { Container, ProductTable, Total } from './styles';\n\nexport default function Cart() {\n    const cart = useSelector(state =>\n        state.cart.map(product => ({\n            ...product,\n            subtotal: formatPrice(product.price * product.amount),\n        }))\n    );\n\n    const total = useSelector(state =>\n        formatPrice(\n            state.cart.reduce((totalSum, product) => {\n                return totalSum + product.price * product.amount;\n            }, 0)\n        )\n    );\n\n    const dispatch = useDispatch();\n\n    function increment(product) {\n        dispatch(\n            CartActions.updateAmountRequest(product.id, product.amount + 1)\n        );\n    }\n\n    function decrement(product) {\n        dispatch(\n            CartActions.updateAmountRequest(product.id, product.amount - 1)\n        );\n    }\n\n    return (\n        <Container>\n            <ProductTable>\n                <thead>\n                    <tr>\n                        <th />\n                        <th>PRODUTO</th>\n                        <th>QTD</th>\n                        <th>SUBTOTAL</th>\n                        <th />\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {cart.map(product => (\n                        <tr>\n                            <td>\n                                <img src={product.image} alt={product.title} />\n                            </td>\n                            <td>\n                                <strong>{product.title}</strong>\n                                <span>{product.priceFormated}</span>\n                            </td>\n                            <td>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => decrement(product)}\n                                    >\n                                        <MdRemoveCircleOutline\n                                            size={28}\n                                            color=\"#7159c1\"\n                                        />\n                                    </button>\n                                    <input\n                                        type=\"text\"\n                                        readOnly\n                                        value={product.amount}\n                                    />\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => increment(product)}\n                                    >\n                                        <MdAddCircleOutline\n                                            size={28}\n                                            color=\"#7159c1\"\n                                        />\n                                    </button>\n                                </div>\n                            </td>\n                            <td>\n                                <strong>{product.subtotal}</strong>\n                            </td>\n                            <td>\n                                <button\n                                    type=\"button\"\n                                    onClick={() =>\n                                        dispatch(\n                                            CartActions.removeFromCart(\n                                                product.id\n                                            )\n                                        )\n                                    }\n                                >\n                                    <MdDelete size=\"20\" color=\"#7159c1\" />\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </ProductTable>\n\n            <footer>\n                <button type=\"button\">Finalizar Pedido</button>\n\n                <Total>\n                    <span>Total</span>\n                    <strong>{total}</strong>\n                </Total>\n            </footer>\n        </Container>\n    );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/cart\" exact component={Cart} />\n        </Switch>\n    );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 50px 0;\n`;\n\nexport const Cart = styled(Link)`\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    transition: opacity 0.2s;\n\n    &:hover {\n        opacity: 0.7;\n    }\n\n    div {\n        text-align: right;\n        margin-right: 10px\n    }\n\n    strong {\n        display: block;\n        color: #fff;\n    }\n\n    span {\n        font-size: 12px;\n        color: #999;\n    }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { MdShoppingBasket } from 'react-icons/md';\n\nimport { Container, Cart } from './styles';\n\nexport default function Header() {\n    const cartSize = useSelector(state => state.cart.length);\n\n    return (\n        <Container>\n            <Link to=\"/\">\n                <img\n                    src=\"https://skylab.rocketseat.com.br/api/files/1562597403849.svg\"\n                    alt=\"RocketShoes\"\n                />\n            </Link>\n\n            <Cart to=\"/cart\">\n                <div>\n                    <strong>Meu Carrinho</strong>\n                    <span>{cartSize} itens</span>\n                </div>\n                <MdShoppingBasket size={36} color=\"#fff\" />\n            </Cart>\n        </Container>\n    );\n}\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import { combineReducers } from 'redux';\n\nimport cart from './cart/reducer';\n\nexport default combineReducers({\n    cart,\n});\n","import { produce } from 'immer';\n\nexport default function cart(state = [], action) {\n    switch (action.type) {\n        case '@cart/ADD_SUCCESS':\n            return produce(state, draft => {\n                const { product } = action;\n                draft.push(product);\n            });\n        case '@cart/REMOVE':\n            return produce(state, draft => {\n                const productIndex = draft.findIndex(p => p.id === action.id);\n\n                if (productIndex >= 0) {\n                    draft.splice(productIndex, 1);\n                }\n            });\n        case '@cart/UPDATE_AMOUNT_SUCCESS': {\n            return produce(state, draft => {\n                const productIndex = draft.findIndex(p => p.id === action.id);\n\n                if (productIndex >= 0) {\n                    draft[productIndex].amount = Number(action.amount);\n                }\n            });\n        }\n        default:\n            return state;\n    }\n}\n","import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport { formatPrice } from '../../../util/format';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\n\nimport { addToCartSuccess, updateAmountSuccess } from './actions';\n\nfunction* addToCart({ id }) {\n    const productExist = yield select(state =>\n        state.cart.find(p => p.id === id)\n    );\n\n    const stock = yield call(api.get, `/stock/${id}`);\n\n    const stockAmount = stock.data.amount;\n    const currentAmount = productExist ? productExist.amount : 0;\n\n    const amount = currentAmount + 1;\n\n    if (amount > stockAmount) {\n        toast.error('Quantidade solicitada fora de estoque');\n        return;\n    }\n\n    if (productExist) {\n        yield put(updateAmountSuccess(id, amount));\n    } else {\n        const response = yield call(api.get, `/products/${id}`);\n\n        const data = {\n            ...response.data,\n            amount: 1,\n            priceFormated: formatPrice(response.data.price),\n        };\n\n        yield put(addToCartSuccess(data));\n    }\n}\n\nfunction* updateAmount({ id, amount }) {\n    if (amount <= 0) return;\n\n    const stock = yield call(api.get, `stock/${id}`);\n    const stockAmount = stock.data.amount;\n\n    if (amount > stockAmount) {\n        toast.error('Quantidade solicitada fora de estoque');\n        return;\n    }\n\n    yield put(updateAmountSuccess(id, amount));\n}\n\nexport default all([\n    takeLatest('@cart/ADD_REQUEST', addToCart),\n    takeLatest('@cart/UPDATE_AMOUNT_REQUEST', updateAmount),\n]);\n","import { all } from 'redux-saga/effects';\n\nimport cart from './cart/sagas';\n\nexport default function* rootSaga() {\n    return yield all([cart]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor =\n    process.env.NODE_ENV === 'development'\n        ? console.tron.createSagaMonitor()\n        : null;\n\nconst sagaMiddleware = createSagaMiddleware({\n    sagaMonitor,\n});\n\nconst enhancer =\n    process.env.NODE_ENV === 'development'\n        ? compose(\n              console.tron.createEnhancer(),\n              applyMiddleware(sagaMiddleware)\n          )\n        : applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport './config/reactotronConfig';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\nimport Header from './components/Header';\n\nimport history from './services/history';\nimport store from './store';\n\nexport default function App() {\n    return (\n        <Provider store={store}>\n            <Router history={history}>\n                <Header />\n                <Routes />\n                <GlobalStyle />\n                <ToastContainer autoClose={3000} />\n            </Router>\n        </Provider>\n    );\n}\n"],"sourceRoot":""}